<?xml version="1.0" encoding="utf-8"?>
<resources>
    <attr name="sephiroth_rangeProgressBarStyle" format="reference" />
    <attr name="sephiroth_rangeSeekBarStyle" format="reference" />
    <attr name="sephiroth_rangeSeekBarStyleInverse" format="reference" />

    <declare-styleable name="RangeProgressBar">
        <attr name="android:progressDrawable" />
        <attr name="android:minWidth" />
        <attr name="android:maxWidth" />
        <attr name="android:minHeight" />
        <attr name="android:maxHeight" />
        <attr name="android:max" />
        <attr name="android:progressTint" />
        <attr name="android:progressTintMode" />
        <attr name="android:progressBackgroundTint" />
        <attr name="android:progressBackgroundTintMode" />
        <attr name="android:interpolator" />

        <!--
             Offset dimension between start and end values.
             If this value is 0 then startValue and endValue position (x) will be the same.
         -->
        <attr name="range_progress_offset" format="dimension" />

        <!-- progress start value -->
        <attr name="range_progress_startValue" format="integer" />
        <!-- progress end value -->
        <attr name="range_progress_endValue" format="integer" />

        <!--
        minimum value between start and end progress values.
         The default is 0, meaning that both start and end can have the same value.
         -->
        <attr name="range_progress_startEnd_minDiff" format="integer" />

        <!-- set the maximum value the start progress can have. This will override range_progress_startEndBoundaries -->
        <attr name="range_progress_startMaxValue" format="integer" />

        <!-- set the minimum value the end progress can have. This will override range_progress_startEndBoundaries -->
        <attr name="range_progress_endMinValue" format="integer" />

    </declare-styleable>

    <declare-styleable name="RangeSeekBar">
        <attr name="android:thumb" />
        <!--
            Left thumb drawable. if not declared, the android:thumb will be used
            from the parent style
        -->
        <attr name="range_seekbar_leftThumb" format="reference" />
        <attr name="range_seekbar_rightThumb" format="reference" />
        <attr name="range_seekbar_useDisabledAlpha" format="boolean" />

        <!--
            size of each step while moving/dragging each thumb
        -->
        <attr name="range_seekbar_stepSize" format="integer" />

        <!--
            seekbar uses clipRect to draw its thumbs. increase/decrease this value
            will result in adding/removing "white" clipping to the background progress around
            the thumbs
        -->
        <attr name="range_seekbar_thumbInset" format="dimension" />

        <attr name="android:thumbOffset" />
        <attr name="android:splitTrack" />
        <attr name="android:thumbTint" />
        <attr name="android:thumbTintMode" />
        <attr name="android:tickMark" />
        <attr name="android:tickMarkTint" />
        <attr name="android:tickMarkTintMode" />
    </declare-styleable>
</resources>